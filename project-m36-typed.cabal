name:                project-m36-typed
version:             0.0.0.1
synopsis:            Typed interface to Project M36
homepage:            http://github.com/matchwood/project-m36-typed#readme
license:             BSD3
license-file:        LICENSE
author:              Matchwood
maintainer:          matchwood1@gmail.com
category:            Database
build-type:          Simple
cabal-version:       >= 1.24
library
  exposed-modules:
    ProjectM36.Typed
    ProjectM36.Typed.Execute
    ProjectM36.Typed.Internal
    ProjectM36.Typed.Ops
    ProjectM36.Typed.Wrapped
    ProjectM36.Typed.Wrapped.Redundant
    ProjectM36.Typed.DB.Types
    ProjectM36.Typed.Gen
    ProjectM36.Typed.Generics
    ProjectM36.Typed.Schema
    ProjectM36.Typed.TypeFunctions
    ProjectM36.Typed.Types
  build-depends:
    splitmix,
    rio,
    base,
    project-m36,
    generics-sop,
    basic-sop,
    QuickCheck,
    binary,
    binary-instances,
    type-level-sets,
    random,
    tf-random,
    mtl,
    uuid,
    word8,
    quickcheck-instances




  hs-source-dirs:      src
  ghc-options:         -Wall
                       -Wcompat
                       -Wincomplete-record-updates
                       -Wincomplete-uni-patterns
                       -Wredundant-constraints
                       -Werror
  default-language:    Haskell2010
  default-extensions:  BangPatterns
                       BinaryLiterals
                       ConstraintKinds
                       DataKinds
                       DefaultSignatures
                       DeriveDataTypeable
                       DeriveFoldable
                       DeriveFunctor
                       DeriveGeneric
                       DeriveTraversable
                       DerivingStrategies
                       DoAndIfThenElse
                       EmptyDataDecls
                       ExistentialQuantification
                       FlexibleContexts
                       FlexibleInstances
                       FunctionalDependencies
                       GADTs
                       GeneralizedNewtypeDeriving
                       InstanceSigs
                       KindSignatures
                       LambdaCase
                       MultiParamTypeClasses
                       MultiWayIf
                       NamedFieldPuns
                       NoImplicitPrelude
                       OverloadedStrings
                       PartialTypeSignatures
                       PatternGuards
                       PolyKinds
                       RankNTypes
                       RecordWildCards
                       ScopedTypeVariables
                       StandaloneDeriving
                       TupleSections
                       TypeApplications
                       TypeFamilies
                       TypeFamilyDependencies
                       TypeOperators
                       TypeSynonymInstances
                       ViewPatterns

test-suite project-m36-typed-test
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test
  main-is:             Test.hs
  ghc-options:         -Wall
                       -Wcompat
                       -Wincomplete-record-updates
                       -Wincomplete-uni-patterns
                       -Wredundant-constraints
                       -Werror
                       -threaded
                       -rtsopts
                       -with-rtsopts=-N
  build-depends:       rio
                     , base
                     , project-m36-typed
                     , tasty
                     , tasty-quickcheck
                     , tasty-hunit
                     , QuickCheck
                     , generics-sop
                     , basic-sop

  default-language:    Haskell2010
  default-extensions:  BangPatterns
                       BinaryLiterals
                       ConstraintKinds
                       DataKinds
                       DefaultSignatures
                       DeriveDataTypeable
                       DeriveFoldable
                       DeriveFunctor
                       DeriveGeneric
                       DeriveTraversable
                       DoAndIfThenElse
                       EmptyDataDecls
                       ExistentialQuantification
                       FlexibleContexts
                       FlexibleInstances
                       FunctionalDependencies
                       GADTs
                       GeneralizedNewtypeDeriving
                       InstanceSigs
                       KindSignatures
                       LambdaCase
                       MultiParamTypeClasses
                       MultiWayIf
                       NamedFieldPuns
                       NoImplicitPrelude
                       OverloadedStrings
                       PartialTypeSignatures
                       PatternGuards
                       PolyKinds
                       RankNTypes
                       RecordWildCards
                       ScopedTypeVariables
                       StandaloneDeriving
                       TupleSections
                       TypeApplications
                       TypeFamilies
                       TypeOperators
                       TypeSynonymInstances
                       ViewPatterns
  ghc-options:
    -O2

benchmark project-m36-benchmark
  type:                exitcode-stdio-1.0
  hs-source-dirs:      benchmark
  main-is:             Benchmark.hs
  ghc-options:         -Wall
                       -Wcompat
                       -Wincomplete-record-updates
                       -Wincomplete-uni-patterns
                       -Wredundant-constraints
                       -Werror
                       -threaded
                       -rtsopts
                       -with-rtsopts=-N
  build-depends:       rio
                     , base
                     , project-m36-typed
                     , tasty
                     , tasty-quickcheck
                     , tasty-hunit
                     , QuickCheck
                     , generics-sop
                     , basic-sop
                     , criterion


  default-language:    Haskell2010
  default-extensions:  BangPatterns
                       BinaryLiterals
                       ConstraintKinds
                       DataKinds
                       DefaultSignatures
                       DeriveDataTypeable
                       DeriveFoldable
                       DeriveFunctor
                       DeriveGeneric
                       DeriveTraversable
                       DoAndIfThenElse
                       EmptyDataDecls
                       ExistentialQuantification
                       FlexibleContexts
                       FlexibleInstances
                       FunctionalDependencies
                       GADTs
                       GeneralizedNewtypeDeriving
                       InstanceSigs
                       KindSignatures
                       LambdaCase
                       MultiParamTypeClasses
                       MultiWayIf
                       NamedFieldPuns
                       NoImplicitPrelude
                       OverloadedStrings
                       PartialTypeSignatures
                       PatternGuards
                       PolyKinds
                       RankNTypes
                       RecordWildCards
                       ScopedTypeVariables
                       StandaloneDeriving
                       TupleSections
                       TypeApplications
                       TypeFamilies
                       TypeOperators
                       TypeSynonymInstances
                       ViewPatterns
  ghc-options:
    -O2
source-repository head
  type:     git
  location: https://github.com/matchwood/project-m36-typed
